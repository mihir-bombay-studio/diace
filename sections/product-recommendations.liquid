<link rel="stylesheet" href="{{ 'component-badge.css' | asset_url }}" media="print" onload="this.media='all'">
<link rel="stylesheet" href="{{ 'component-card.css' | asset_url }}" media="print" onload="this.media='all'">
<link rel="stylesheet" href="{{ 'component-price.css' | asset_url }}" media="print" onload="this.media='all'">
<link rel="stylesheet" href="{{ 'section-product-recommendations.css' | asset_url }}" media="print" onload="this.media='all'">

<noscript>{{ 'component-badge.css' | asset_url | stylesheet_tag }}</noscript>
<noscript>{{ 'component-card.css' | asset_url | stylesheet_tag }}</noscript>
<noscript>{{ 'component-price.css' | asset_url | stylesheet_tag }}</noscript>
<noscript>{{ 'section-product-recommendations.css' | asset_url | stylesheet_tag }}</noscript>

<product-recommendations class="product-recommendations page-width" data-url="{{ routes.product_recommendations_url }}?section_id={{ section.id }}&product_id={{ product.id }}&limit=4">
  {% if recommendations.performed and recommendations.products_count > 0 %}
    <h2 class="product-recommendations__heading">{{ section.settings.heading | escape }}</h2>
    <ul class="grid grid--2-col grid--3-col-tablet{% if recommendations.products_count > 3 %} grid--4-col-desktop grid--quarter-max{% endif %}" role="list">
      {% for recommendation in recommendations.products %}
        <li class="grid__item">
          {% render 'product-card',
            product_card_product: recommendation,
            media_size: section.settings.image_ratio,
            show_secondary_image: section.settings.show_secondary_image,
            add_image_padding: section.settings.add_image_padding,
            show_vendor: section.settings.show_vendor
          %}
        </li>
      {% endfor %}
    </ul>
  
  <div class="collection container">
    <div class="product-collection flex-box">
      {% for recommendation in recommendations.products %}

      <div class="product-collection-card" id="main-collection-product-grid" data-id="{{ section.id }}">
        <div class="featured-product-img rel">
          {% if recommendation.featured_image != blank %}
          <a href="{{recommendation.url}}">
            <img class="product-img" src="{{ recommendation.featured_image.src | img_url: 'square' }}"></a>
          {% else %}
          {{ 'product-1' | placeholder_svg_tag: 'my-custom-class' }}
          {% endif %}


          <div class="AddToCart product-hover-text flex-box align-center" data-variant-id="{{product.first_available_variant.id}}" data-quantity = "1">
            <span class="plus-icon">{% include 'icon-yellow-plus' %}</span>
            <span class="hover-text bold">{{ section.settings.hover_text }}</span>
          </div>
        </div>

        <div class="product-title-price flex-direction flex-box justify-between">
          <div class="product-title semibold"><a href="{{recommendation.url}}">{{ recommendation.title | escape  | capitalize}}</a></div>
          <div class="product-compare-to-and-price">
            {% if recommendation.compare_at_price %}<span class="compare-to-price light">{{ recommendation.compare_at_price | money }}</span>{% endif %}
            <span class="product-price semibold{% if recommendation.compare_at_price %} yellow-text{% endif %}">{{ recommendation.price | money  }}</span>
          </div>
        </div>
      </div>
      {% endfor %}
    </div>
  </div>
  {% endif %}
</product-recommendations>

{% javascript %}
  class ProductRecommendations extends HTMLElement {
    constructor() {
      super();

      const handleIntersection = (entries, observer) => {
        if (!entries[0].isIntersecting) return;
        observer.unobserve(this);

        fetch(this.dataset.url)
          .then(response => response.text())
          .then(text => {
            const html = document.createElement('div');
            html.innerHTML = text;
            const recommendations = html.querySelector('product-recommendations');
            if (recommendations && recommendations.innerHTML.trim().length) {
              this.innerHTML = recommendations.innerHTML;
            }
          })
          .catch(e => {
            console.error(e);
          });
      }

      new IntersectionObserver(handleIntersection.bind(this), {rootMargin: '0px 0px 200px 0px'}).observe(this);
    }
  }

  customElements.define('product-recommendations', ProductRecommendations);
{% endjavascript %}

{% schema %}
{
  "name": "Product Recommendations",
  "tag": "section",
  "class": "spaced-section",
  "settings": [
    {
      "type": "paragraph",
      "content": "t:sections.product-recommendations.settings.paragraph__1.content"
    },
    {
      "type": "text",
      "id": "heading",
      "default": "You may also like",
      "label": "t:sections.product-recommendations.settings.heading.label"
    },
    {
      "type": "header",
      "content": "t:sections.product-recommendations.settings.header__2.content"
    },
    {
      "type": "select",
      "id": "image_ratio",
      "options": [
        {
          "value": "adapt",
          "label": "t:sections.product-recommendations.settings.image_ratio.options__1.label"
        },
        {
          "value": "portrait",
          "label": "t:sections.product-recommendations.settings.image_ratio.options__2.label"
        },
        {
          "value": "square",
          "label": "t:sections.product-recommendations.settings.image_ratio.options__3.label"
        }
      ],
      "default": "adapt",
      "label": "t:sections.product-recommendations.settings.image_ratio.label"
    },
    {
      "type": "checkbox",
      "id": "show_secondary_image",
      "default": false,
      "label": "t:sections.product-recommendations.settings.show_secondary_image.label"
    },
    {
      "type": "checkbox",
      "id": "add_image_padding",
      "default": false,
      "label": "t:sections.product-recommendations.settings.add_image_padding.label"
    },
    {
      "type": "checkbox",
      "id": "show_vendor",
      "default": false,
      "label": "t:sections.product-recommendations.settings.show_vendor.label"
    },
		{
			"type": "text",
			"id": "hover_text",
			"label": "Hover Text",
			"default": "KOPEN"
		}
  ],
  "presets": [
    {
      "name": "Product Recommendations",
        "category":"section"
    }
  ]
}
{% endschema %}
